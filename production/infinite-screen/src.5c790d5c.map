{"version":3,"sources":["../../../../../../usr/local/lib/node_modules/parcel-bundler/node_modules/process/browser.js","../node_modules/babel-regenerator-runtime/runtime.js","InfiniteScreen.js","config.js","CreateScreen.js","index.js"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","InfiniteScreen","options","config","Object","assign","turnX","turnY","container","document","getElementById","init","addEvent","event","inService","alpha","toFixed","gamma","beta","onProcess","onStart","onStop","addEventListener","deviceCallback","bind","accelerationIncludingGravity","x","y","direction","reg","result","style","transform","match","skewingX","skewingY","Math","abs","finalyStyle","replace","CreateScreen","matrix","row","col","callback","matirx","count","rowArr","j","canvasDom","canvas","ctx","getContext","screenWidth","window","screen","width","screenHeight","height","HORI_SCREEN_NUMB","VERT_SCREEN_NUM","screenMatrix","setAppInScreen","setCanvasSize","drawScreen","num","findScreen","originX","originY","centerX","centerY","transformOrigin","drawBg","screenCount","fill","forEach","_","drawAppIcon","drawImg","require","img","w","h","Promise","resolve","reject","image","Image","src","onload","drawImage","obj","el","n","APP_ICON_ROW","APP_ICON_COL","appData","app","getAppData","eachWidth","eachHeight","halfWidth","iconSize","halfHeight","rows","data","k","icon","VConsole","defaultScreenShow","show","infinite","aplha","btnTouchdown","timer","transition","start","pageY","touches","body","btnTouchmove","distanceY","touchPageY","Number","minScale","indexOf","btnTouchend","stop"],"mappings":";;AACA,IAOIA,EACAC,EARAC,EAAUC,OAAOC,QAAU,GAU/B,SAASC,IACC,MAAA,IAAIC,MAAM,mCAEpB,SAASC,IACC,MAAA,IAAID,MAAM,qCAsBpB,SAASE,EAAWC,GACZT,GAAAA,IAAqBU,WAEdA,OAAAA,WAAWD,EAAK,GAGvB,IAACT,IAAqBK,IAAqBL,IAAqBU,WAEzDA,OADYA,EAAAA,WACZA,WAAWD,EAAK,GAEvB,IAEOT,OAAAA,EAAiBS,EAAK,GAC/B,MAAME,GACA,IAEOX,OAAAA,EAAiBY,KAAK,KAAMH,EAAK,GAC1C,MAAME,GAEGX,OAAAA,EAAiBY,KAAK,KAAMH,EAAK,KAMpD,SAASI,EAAgBC,GACjBb,GAAAA,IAAuBc,aAEhBA,OAAAA,aAAaD,GAGpB,IAACb,IAAuBM,IAAwBN,IAAuBc,aAEhEA,OADcA,EAAAA,aACdA,aAAaD,GAEpB,IAEOb,OAAAA,EAAmBa,GAC5B,MAAOH,GACD,IAEOV,OAAAA,EAAmBW,KAAK,KAAME,GACvC,MAAOH,GAGEV,OAAAA,EAAmBW,KAAK,KAAME,MAjEhD,WACO,IAEuBJ,EADG,mBAAfA,WACYA,WAEAL,EAEzB,MAAOM,GACcN,EAAAA,EAEnB,IAEyBU,EADG,mBAAjBA,aACcA,aAEAR,EAE3B,MAAOI,GACgBJ,EAAAA,GAjB5B,GAwED,IAEIS,EAFAC,EAAQ,GACRC,GAAW,EAEXC,GAAc,EAElB,SAASC,IACAF,GAAaF,IAGP,GAAA,EACPA,EAAaK,OACLL,EAAAA,EAAaM,OAAOL,GAEf,GAAC,EAEdA,EAAMI,QACNE,KAIR,SAASA,IACDL,IAAAA,EAAAA,CAGAM,IAAAA,EAAUhB,EAAWY,GACd,GAAA,EAGLK,IADFA,IAAAA,EAAMR,EAAMI,OACVI,GAAK,CAGA,IAFQR,EAAAA,EACP,EAAA,KACCE,EAAaM,GACdT,GACaG,EAAAA,GAAYO,MAGpB,GAAC,EACRT,EAAAA,EAAMI,OAED,EAAA,KACJ,GAAA,EACKG,EAAAA,IAiBpB,SAASG,EAAKlB,EAAKmB,GACVnB,KAAAA,IAAMA,EACNmB,KAAAA,MAAQA,EAYjB,SAASC,KA5BT3B,EAAQ4B,SAAW,SAAUrB,GACrBsB,IAAAA,EAAO,IAAIC,MAAMC,UAAUZ,OAAS,GACpCY,GAAAA,UAAUZ,OAAS,EACd,IAAA,IAAIa,EAAI,EAAGA,EAAID,UAAUZ,OAAQa,IAC7BA,EAAAA,EAAI,GAAKD,UAAUC,GAG1BC,EAAAA,KAAK,IAAIR,EAAKlB,EAAKsB,IACJ,IAAjBd,EAAMI,QAAiBH,GACZK,EAAAA,IASnBI,EAAKS,UAAUV,IAAM,WACZjB,KAAAA,IAAI4B,MAAM,KAAM,KAAKT,QAE9B1B,EAAQoC,MAAQ,UAChBpC,EAAQqC,SAAU,EAClBrC,EAAQsC,IAAM,GACdtC,EAAQuC,KAAO,GACfvC,EAAQwC,QAAU,GAClBxC,EAAQyC,SAAW,GAInBzC,EAAQ0C,GAAKf,EACb3B,EAAQ2C,YAAchB,EACtB3B,EAAQ4C,KAAOjB,EACf3B,EAAQ6C,IAAMlB,EACd3B,EAAQ8C,eAAiBnB,EACzB3B,EAAQ+C,mBAAqBpB,EAC7B3B,EAAQgD,KAAOrB,EACf3B,EAAQiD,gBAAkBtB,EAC1B3B,EAAQkD,oBAAsBvB,EAE9B3B,EAAQmD,UAAY,SAAUC,GAAe,MAAA,IAE7CpD,EAAQqD,QAAU,SAAUD,GAClB,MAAA,IAAIhD,MAAM,qCAGpBJ,EAAQsD,IAAM,WAAqB,MAAA,KACnCtD,EAAQuD,MAAQ,SAAUC,GAChB,MAAA,IAAIpD,MAAM,mCAEpBJ,EAAQyD,MAAQ,WAAoB,OAAA;;;;AC0dpC,IAAA,EAAA,UAAA,GAAA,EAAA,QAAA,YAvoBA,SAAA,GACA,aAEA,IACA,EADA,EAAA,OAAA,UAAA,eAEA,EACA,mBAAA,QAAA,OAAA,UAAA,aAEA,EAAA,iBAAA,OACA,EAAA,EAAA,mBACA,GAAA,EACA,IAGA,OAAA,QAAA,OAJA,EAaA,EAAA,EAAA,mBAAA,EAAA,OAAA,QAAA,IAaA,KAAA,EAoBA,IAAA,EAAA,iBACA,EAAA,iBACA,EAAA,YACA,EAAA,YAIA,EAAA,GAUA,EAAA,EAAA,UAAA,EAAA,UACA,EAAA,UAAA,EAAA,YAAA,EACA,EAAA,YAAA,EACA,EAAA,YAAA,oBAYA,EAAA,oBAAA,SAAA,GACA,IAAA,EAAA,mBAAA,GAAA,EAAA,YACA,QAAA,IACA,IAAA,GAGA,uBAAA,EAAA,aAAA,EAAA,QAIA,EAAA,KAAA,SAAA,GAOA,OANA,OAAA,eACA,OAAA,eAAA,EAAA,GAEA,EAAA,UAAA,EAEA,EAAA,UAAA,OAAA,OAAA,GACA,GAQA,EAAA,MAAA,SAAA,GACA,OAAA,IAAA,EAAA,IA8EA,EAAA,EAAA,WAKA,EAAA,MAAA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,IAAA,EACA,EAAA,EAAA,EAAA,EAAA,IAGA,OAAA,EAAA,oBAAA,GACA,EACA,EAAA,OAAA,KAAA,SAAA,GACA,OAAA,EAAA,KAAA,EAAA,MAAA,EAAA,UAqJA,EAAA,GAEA,EAAA,GAAA,WACA,OAAA,MAGA,EAAA,SAAA,WACA,MAAA,sBAkCA,EAAA,KAAA,SAAA,GACA,IAAA,EAAA,GACA,IAAA,IAAA,KAAA,EACA,EAAA,KAAA,GAMA,OAJA,EAAA,UAIA,SAAA,IACA,KAAA,EAAA,QAAA,CACA,IAAA,EAAA,EAAA,MACA,GAAA,KAAA,EAGA,OAFA,EAAA,MAAA,EACA,EAAA,MAAA,EACA,EAQA,OADA,EAAA,MAAA,EACA,IAsCA,EAAA,OAAA,EAMA,EAAA,UAAA,CACA,YAAA,EAEA,MAAA,SAAA,GASA,GARA,KAAA,KAAA,EACA,KAAA,KAAA,EACA,KAAA,KAAA,EACA,KAAA,MAAA,EACA,KAAA,SAAA,KAEA,KAAA,WAAA,QAAA,IAEA,EACA,IAAA,IAAA,KAAA,KAEA,MAAA,EAAA,OAAA,IACA,EAAA,KAAA,KAAA,KACA,OAAA,EAAA,MAAA,MACA,KAAA,GAAA,IAMA,KAAA,WACA,KAAA,MAAA,EAEA,IACA,EADA,KAAA,WAAA,GACA,WACA,GAAA,UAAA,EAAA,KACA,MAAA,EAAA,IAGA,OAAA,KAAA,MAGA,kBAAA,SAAA,GACA,GAAA,KAAA,KACA,MAAA,EAGA,IAAA,EAAA,KACA,SAAA,EAAA,EAAA,GAIA,OAHA,EAAA,KAAA,QACA,EAAA,IAAA,EACA,EAAA,KAAA,IACA,EAGA,IAAA,IAAA,EAAA,KAAA,WAAA,OAAA,EAAA,GAAA,IAAA,EAAA,CACA,IAAA,EAAA,KAAA,WAAA,GACA,EAAA,EAAA,WAEA,GAAA,SAAA,EAAA,OAIA,OAAA,EAAA,OAGA,GAAA,EAAA,QAAA,KAAA,KAAA,CACA,IAAA,EAAA,EAAA,KAAA,EAAA,YACA,EAAA,EAAA,KAAA,EAAA,cAEA,GAAA,GAAA,EAAA,CACA,GAAA,KAAA,KAAA,EAAA,SACA,OAAA,EAAA,EAAA,UAAA,GACA,GAAA,KAAA,KAAA,EAAA,WACA,OAAA,EAAA,EAAA,iBAGA,GAAA,GACA,GAAA,KAAA,KAAA,EAAA,SACA,OAAA,EAAA,EAAA,UAAA,OAGA,CAAA,IAAA,EAMA,MAAA,IAAA,MAAA,0CALA,GAAA,KAAA,KAAA,EAAA,WACA,OAAA,EAAA,EAAA,gBAUA,OAAA,SAAA,EAAA,GACA,IAAA,IAAA,EAAA,KAAA,WAAA,OAAA,EAAA,GAAA,IAAA,EAAA,CACA,IAAA,EAAA,KAAA,WAAA,GACA,GAAA,EAAA,QAAA,KAAA,MACA,EAAA,KAAA,EAAA,eACA,KAAA,KAAA,EAAA,WAAA,CACA,IAAA,EAAA,EACA,OAIA,IACA,UAAA,GACA,aAAA,IACA,EAAA,QAAA,GACA,GAAA,EAAA,aAGA,EAAA,MAGA,IAAA,EAAA,EAAA,EAAA,WAAA,GAUA,OATA,EAAA,KAAA,EACA,EAAA,IAAA,EAEA,EACA,KAAA,KAAA,EAAA,WAEA,KAAA,SAAA,GAGA,GAGA,SAAA,SAAA,EAAA,GACA,GAAA,UAAA,EAAA,KACA,MAAA,EAAA,IAGA,UAAA,EAAA,MACA,aAAA,EAAA,KACA,KAAA,KAAA,EAAA,IACA,WAAA,EAAA,MACA,KAAA,KAAA,EAAA,IACA,KAAA,KAAA,OACA,WAAA,EAAA,MAAA,IACA,KAAA,KAAA,IAIA,OAAA,SAAA,GACA,IAAA,IAAA,EAAA,KAAA,WAAA,OAAA,EAAA,GAAA,IAAA,EAAA,CACA,IAAA,EAAA,KAAA,WAAA,GACA,GAAA,EAAA,aAAA,EAGA,OAFA,KAAA,SAAA,EAAA,WAAA,EAAA,UACA,EAAA,GACA,IAKA,MAAA,SAAA,GACA,IAAA,IAAA,EAAA,KAAA,WAAA,OAAA,EAAA,GAAA,IAAA,EAAA,CACA,IAAA,EAAA,KAAA,WAAA,GACA,GAAA,EAAA,SAAA,EAAA,CACA,IAAA,EAAA,EAAA,WACA,GAAA,UAAA,EAAA,KAAA,CACA,IAAA,EAAA,EAAA,IACA,EAAA,GAEA,OAAA,GAMA,MAAA,IAAA,MAAA,0BAGA,cAAA,SAAA,EAAA,EAAA,GAOA,OANA,KAAA,SAAA,CACA,SAAA,EAAA,GACA,WAAA,EACA,QAAA,GAGA,IAnmBA,SAAA,EAAA,EAAA,EAAA,EAAA,GAEA,IAAA,EAAA,OAAA,QAAA,GAAA,GAAA,WACA,EAAA,IAAA,EAAA,GAAA,IAMA,OAFA,EAAA,QAiLA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAEA,OAAA,SAAA,EAAA,GACA,GAAA,IAAA,EACA,MAAA,IAAA,MAAA,gCAGA,GAAA,IAAA,EAAA,CACA,GAAA,UAAA,EACA,MAAA,EAKA,OAAA,IAGA,OAAA,CACA,IAAA,EAAA,EAAA,SACA,GAAA,EAAA,CACA,GAAA,WAAA,GACA,UAAA,GAAA,EAAA,SAAA,KAAA,EAAA,CAGA,EAAA,SAAA,KAIA,IAAA,EAAA,EAAA,SAAA,OACA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,GACA,GAAA,UAAA,EAAA,KAAA,CAGA,EAAA,QACA,EAAA,EAAA,IACA,UAIA,GAAA,WAAA,EAGA,SAIA,IAAA,EAAA,EACA,EAAA,SAAA,GACA,EAAA,SACA,GAGA,GAAA,UAAA,EAAA,KAAA,CACA,EAAA,SAAA,KAIA,EAAA,QACA,EAAA,EAAA,IACA,SAMA,EAAA,OACA,EAAA,EAEA,IAAA,EAAA,EAAA,IACA,IAAA,EAAA,KAKA,OADA,EAAA,EACA,EAJA,EAAA,EAAA,YAAA,EAAA,MACA,EAAA,KAAA,EAAA,QAMA,EAAA,SAAA,KAGA,GAAA,SAAA,EACA,EAAA,MAAA,EAGA,EAAA,KADA,IAAA,EACA,EAEA,OAEA,GAAA,UAAA,EAAA,CACA,GAAA,IAAA,EAEA,MADA,EAAA,EACA,EAGA,EAAA,kBAAA,KAGA,EAAA,OACA,EAAA,OAGA,WAAA,GACA,EAAA,OAAA,SAAA,GAGA,EAAA,EAEA,IAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,WAAA,EAAA,KAAA,CAGA,EAAA,EAAA,KACA,EACA,EAEA,IAAA,EAAA,CACA,MAAA,EAAA,IACA,KAAA,EAAA,MAGA,GAAA,EAAA,MAAA,EAOA,OAAA,EANA,EAAA,UAAA,SAAA,IAGA,EAAA,OAMA,UAAA,EAAA,OACA,EAAA,EAGA,EAAA,QACA,EAAA,EAAA,OA1TA,CAAA,EAAA,EAAA,GAEA,EAcA,SAAA,EAAA,EAAA,EAAA,GACA,IACA,MAAA,CAAA,KAAA,SAAA,IAAA,EAAA,KAAA,EAAA,IACA,MAAA,GACA,MAAA,CAAA,KAAA,QAAA,IAAA,IAiBA,SAAA,KACA,SAAA,KACA,SAAA,KASA,SAAA,EAAA,GACA,CAAA,OAAA,QAAA,UAAA,QAAA,SAAA,GACA,EAAA,GAAA,SAAA,GACA,OAAA,KAAA,QAAA,EAAA,MAkCA,SAAA,EAAA,GACA,KAAA,IAAA,EAGA,SAAA,EAAA,GAGA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,GAAA,GACA,EAAA,EAAA,MACA,OAAA,aAAA,EACA,QAAA,QAAA,EAAA,KAAA,KAAA,EAAA,GACA,QAAA,QAAA,GAAA,KAAA,SAAA,GAiBA,OADA,EAAA,MAAA,EACA,IAIA,iBAAA,GAAA,EAAA,SACA,EAAA,EAAA,OAAA,KAAA,IAGA,IAGA,EAHA,EAAA,EAAA,KAAA,EAAA,QACA,EAAA,EAAA,KAAA,EAAA,SACA,EAAA,KAAA,EAAA,UAiCA,KAAA,QA9BA,SAAA,EAAA,GACA,SAAA,IACA,OAAA,EAAA,EAAA,GAGA,OAAA,EAaA,EAAA,EAAA,KACA,EAGA,GACA,IAAA,QAAA,SAAA,GACA,EAAA,QAqLA,SAAA,EAAA,GACA,IAAA,EAAA,CAAA,OAAA,EAAA,IAEA,KAAA,IACA,EAAA,SAAA,EAAA,IAGA,KAAA,IACA,EAAA,WAAA,EAAA,GACA,EAAA,SAAA,EAAA,IAGA,KAAA,WAAA,KAAA,GAGA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,YAAA,GACA,EAAA,KAAA,gBACA,EAAA,IACA,EAAA,WAAA,EAGA,SAAA,EAAA,GAIA,KAAA,WAAA,CAAA,CAAA,OAAA,SACA,EAAA,QAAA,EAAA,MACA,KAAA,OAAA,GA8BA,SAAA,EAAA,GACA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,GACA,GAAA,EACA,OAAA,EAAA,KAAA,GAGA,GAAA,mBAAA,EAAA,KACA,OAAA,EAGA,IAAA,MAAA,EAAA,QAAA,CACA,IAAA,GAAA,EAAA,EAAA,SAAA,IACA,OAAA,EAAA,EAAA,QACA,GAAA,EAAA,KAAA,EAAA,GAGA,OAFA,EAAA,MAAA,EAAA,GACA,EAAA,MAAA,EACA,EAOA,OAHA,EAAA,MAAA,EACA,EAAA,MAAA,EAEA,GAGA,OAAA,EAAA,KAAA,GAKA,MAAA,CAAA,KAAA,GAIA,SAAA,IACA,MAAA,CAAA,MAAA,EAAA,MAAA,IA3cA,CAmoBA,iBAAA,EAAA,EACA,iBAAA,OAAA,OACA,iBAAA,KAAA,KAAA;;ACnkBeC,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,IAAAA,EAAAA,WAAAA,OAAAA,SAAAA,EAAAA,GAAAA,GAAAA,MAAAA,QAAAA,GAAAA,OAAAA,EAAAA,GAAAA,OAAAA,YAAAA,OAAAA,GAAAA,OAAAA,SAAAA,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAAA,EAAAA,GAAAA,EAAAA,OAAAA,EAAAA,IAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,OAAAA,cAAAA,GAAAA,EAAAA,EAAAA,QAAAA,QAAAA,EAAAA,KAAAA,EAAAA,QAAAA,GAAAA,EAAAA,SAAAA,GAAAA,GAAAA,IAAAA,MAAAA,GAAAA,GAAAA,EAAAA,EAAAA,EAAAA,QAAAA,KAAAA,GAAAA,EAAAA,QAAAA,EAAAA,SAAAA,QAAAA,GAAAA,EAAAA,MAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,MAAAA,IAAAA,UAAAA,yDAAAA,GAAAA,EAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCA5ETA,IAAAA,EAAAA,WACwB,SAAA,IAAdC,IAAAA,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAI,EAAA,KAAA,GACjBC,KAAAA,OAASC,OAAOC,OAAO,CACb,WAAA,EACA,UAAA,cACZH,GACEI,KAAAA,MAAQ,EACRC,KAAAA,MAAQ,EACRJ,KAAAA,OAAOK,UAAYC,SAASC,eAAe,KAAKP,OAAOK,WACvDG,KAAAA,OAmEEV,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,OAhEJ,MAAA,WACEW,KAAAA,aA+DEX,CAAAA,IAAAA,iBA5DIY,MAAAA,SAAAA,GACP,IAAC,KAAKV,OAAOW,UAAW,OAAO,EAE/BC,IAAAA,EAASF,EAAME,MAAOC,QAAQ,GAE9BC,EAASJ,EAAMI,MAAOD,QAAQ,GAE9BE,EAAQL,EAAMK,KAAMF,QAAQ,GAC3Bb,KAAAA,OAAOgB,WAAa,KAAKhB,OAAOgB,UAAUlE,KAAK,KAAM8D,EAAOG,EAAMD,KAoDhEhB,CAAAA,IAAAA,QAjDH,MAAA,WACCE,KAAAA,OAAOW,WAAY,EACnBX,KAAAA,OAAOiB,SAAW,KAAKjB,OAAOiB,YA+C5BnB,CAAAA,IAAAA,OA5CJ,MAAA,WACEE,KAAAA,OAAOW,WAAY,EACnBX,KAAAA,OAAOkB,QAAU,KAAKlB,OAAOkB,WA0C3BpB,CAAAA,IAAAA,WAnCA,MAAA,WAAA,IAAA,EAAA,KACAqB,OAAAA,iBAAiB,oBAAqB,KAAKC,eAAeC,KAAK,OAC/DF,OAAAA,iBAAiB,eAAiB,SAACT,GAClCP,IAAAA,EAAQO,EAAMY,6BAA6BC,EAAEV,QAAQ,GACrDT,EAAQM,EAAMY,6BAA6BE,EAAEX,QAAQ,GACrD,IAAC,EAAKb,OAAOW,UAGN,OAFFR,EAAAA,MAAQA,EACRC,EAAAA,MAAQA,GACN,EAEHD,GAAQ,EAAKA,MACbC,GAAQ,EAAKA,MACfqB,IACAC,EAAM,uCACJrB,EAAc,EAAKL,OAAnBK,UACFsB,EAAStB,EAAUuB,MAAMC,UAAUC,MAAMJ,GAC3CC,GAAAA,EAAQ,CACcA,IAAAA,EAAAA,EAAAA,EADd,GACMJ,GADN,EAAA,GAAA,EAAA,IACSC,EADT,EAAA,GAKJO,EAAmB,GAAR5B,EACX6B,EAAmB,GAAR5B,EACX6B,GAAAA,KAAKC,IAAIH,GAAY,IAAME,KAAKC,IAAIF,GAAY,GAAI,CAG9CG,IAAAA,EAA8BZ,iBAAAA,EAAIQ,GAAgBP,SAAAA,EAAIQ,GAA5D,WACMH,EAAYxB,EAAUuB,MAAMC,UAAUO,QAAQV,EAAKS,GAC/CP,EAAAA,MAAMC,UAAYA,QAOjC/B,CAAAA,IAAAA,YAvCK,IAAA,WACL,OAAA,KAAKE,OAAOW,cAsCZb,EA5ETA,GA4ESA,QAAAA,QAAAA;;AC5EA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,CACO,iBAAA,EACD,gBAAA,EACH,aAAA,EACA,aAAA;;;;;;ACqJHuC,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,IAAAA,EAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GAzJf,EAAA,QAAA,YAyJeA,EAAAA,EAAAA,GAAAA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAAAA,SAAAA,EAAAA,GAAAA,OAAAA,WAAAA,IAAAA,EAAAA,EAAAA,MAAAA,KAAAA,WAAAA,OAAAA,IAAAA,QAAAA,SAAAA,EAAAA,GAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,MAAAA,MAAAA,GAAAA,YAAAA,EAAAA,GAAAA,IAAAA,EAAAA,KAAAA,OAAAA,QAAAA,QAAAA,GAAAA,KAAAA,SAAAA,GAAAA,EAAAA,OAAAA,IAAAA,SAAAA,GAAAA,EAAAA,QAAAA,KAAAA,EAAAA,GAAAA,CAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAvJfnE,MAAMoE,OAAS,SAASC,EAAKC,EAAKC,GAGzB,IAFCC,IAAAA,EAAS,GACXC,EAAQ,EACHvE,EAAI,EAAGA,EAAImE,EAAKnE,IAAK,CAErB,IADCwE,IAAAA,EAAS,GACNC,EAAI,EAAGA,EAAIL,EAAKK,IACdxE,EAAAA,KAAKoE,EAASrE,EAAGyE,EAAGF,IAClB,GAAA,EAENtE,EAAAA,KAAKuE,GAETF,OAAAA,GAGLL,IAAAA,EAAAA,WACUS,SAAAA,EAAAA,GAAW/C,IAAAA,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAI,EAAA,KAAA,GAC5BgD,KAAAA,OAASD,EACTE,KAAAA,IAAMF,EAAUG,WAAW,MAC3BC,KAAAA,YAAcC,OAAOC,OAAOC,MAC5BC,KAAAA,aAAeH,OAAOC,OAAOG,OACRf,IAAAA,EAA8BxC,EALvB,QAKzBwD,iBAAwCjB,EAAQvC,EALvB,QAKFyD,gBAC1BC,KAAAA,aAAexF,MAAMoE,OAAOC,EAAKC,EAAK,SAACpE,EAAGyE,EAAGF,GAAW,MAAA,CACtDA,EAAAA,EACME,QAAAA,EAAIM,OAAOC,OAAOC,MAClBjF,QAAAA,EAAI+E,OAAOC,OAAOG,OACtB,IAAA,MAEJvD,KAAAA,OAASC,OAAOC,OAAO,GAAIF,EAAlB,QAA0BD,GACnC,IAAA,IAAI3B,EAAI,EAAGA,EAAKoE,EAAMD,EAAMnE,IACxBuF,KAAAA,eAAevF,GAEnBoC,KAAAA,OAwHE6B,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,OArHJ,MAAA,WACEuB,KAAAA,gBACAC,KAAAA,eAmHExB,CAAAA,IAAAA,OAhHNyB,MAAAA,SAAAA,GAC4B,IAAA,EAAA,KAAKC,WAAWD,GAArCE,EAAAA,EAAAA,QAASC,EAAAA,EAAAA,QACTX,EAA8B,KAA9BA,aACFY,EAAUF,EADsB,KAAhBd,YACkB,EAClCiB,EAAUF,EAAUX,EAAe,EACpCP,KAAAA,OAAOnB,MAAMC,UAA4BmC,gBAAAA,EAAeC,QAAAA,EAA7D,kBACKlB,KAAAA,OAAOnB,MAAMwC,gBAAqBF,EAAaC,MAAAA,EAApD,OA0GO9B,CAAAA,IAAAA,gBAvGK,MAAA,WACJa,IAAAA,EAAsC,KAAtCA,YAAaI,EAAyB,KAAzBA,aAActD,EAAW,KAAXA,OAC3BwD,EAAsCxD,EAAtCwD,iBAAkBC,EAAoBzD,EAApByD,gBACrBV,KAAAA,OAAOM,MAAQH,EAAcM,EAC7BT,KAAAA,OAAOQ,OAASD,EAAeG,IAmG7BpB,CAAAA,IAAAA,aAAAA,MAAAA,WAAAA,IAAAA,EAAAA,EAAAA,mBAAAA,KAAAA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,KAAAA,OAAAA,mBAAAA,KAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EA/FD,OA+FCA,EAAAA,KAAAA,EA/FD,KAAKgC,SA+FJhC,KAAAA,EA7F2C,EAAA,KAAKrC,OAA9BuB,EAAlBiC,EAAAA,iBAAsChC,EAAjBiC,EAAAA,gBAEtBa,MADc/C,EAAIC,GACL+C,KAAK,GAAGC,QAAQ,SAACC,EAAGrG,GAC9BsG,EAAAA,YAAYtG,KA0FdiE,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAAA,SAAAA,EAAAA,SAAAA,OAAAA,WAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,IAAAA,CAAAA,IAAAA,SAtFF,MAAA,WAC8C,KAA3CW,IAA2C,KAAtCD,OAALC,IAAaE,EAA8B,KAA9BA,YAAaI,EAAiB,KAAjBA,aAC3B,OAAA,KAAKqB,QAAQC,QAAQ,oBAAmC,EAAd1B,EAAiBI,EAAcJ,EAAaI,KAoFtFjB,CAAAA,IAAAA,UAjFHwC,MAAAA,SAAAA,EAAKtD,EAAGC,EAAGsD,EAAGC,GAAG,IAAA,EAAA,KACd,OAAA,IAAIC,QAAQ,SAACC,EAASC,GACrBC,IAAAA,EAAQ,IAAIC,MACVC,EAAAA,IAAMR,EACNS,EAAAA,OAAS,WACLjC,EAAAA,MAAQyB,EACRvB,EAAAA,OAASwB,EACV/B,EAAAA,IAAIuC,UAAUJ,EAAO5D,EAAGC,EAAGsD,EAAGC,GAC3B,EAAA,KACRE,SAwED5C,CAAAA,IAAAA,kBAnEKyB,MAAAA,SAAAA,GACN0B,IAAAA,EAAM,CACH,IAAA,EACA,IAAA,GAUFA,OARF9B,KAAAA,aAAac,QAAQ,SAACiB,EAAIlD,GACxBiC,EAAAA,QAAQ,SAACpB,EAAQZ,GACZY,EAAOsC,GAAK5B,IACRtB,EAAAA,IAAMA,EACND,EAAAA,IAAMA,OAIfiD,IAsDAnD,CAAAA,IAAAA,aAnDE,MAAA,WACwC,IAAA,EAAA,KAAKrC,OAAhCuC,EAAdoD,EAAAA,aAAiCnD,EAAdoD,EAAAA,aAKpBC,OAJS3H,MAAMoE,OAAOC,EAAKC,EAAK,SAACjB,EAAGC,GAAO,MAAA,CACxC,KAAA,KACAoD,KAAAA,QAAQ,wBA+CXvC,CAAAA,IAAAA,aA1CAyB,MAAAA,SAAAA,GACH0B,IAAAA,EAAM,KAQHA,OAPF9B,KAAAA,aAAac,QAAQ,SAACiB,EAAIlD,GACxBiC,EAAAA,QAAQ,SAACpB,EAAQZ,GACZY,EAAOsC,GAAK5B,IACNV,EAAAA,OAIXoC,IAiCAnD,CAAAA,IAAAA,iBA9BIjE,MAAAA,SAAAA,GACI,KAAK2F,WAAW3F,GACxB0H,IAAM,KAAKC,eA4BX1D,CAAAA,IAAAA,cAzBU,MAAA,WAAA,IAAA,EAAA,KAATyB,EAAM,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EACY,EAAA,KAAKf,OACQ,GAD/BM,EAAAA,MAAOE,EAAAA,OACwB,KAAKvD,QAApC2F,EAAAA,EAAAA,aAAcC,EAAAA,EAAAA,aACd1C,EAA8B,KAA9BA,YAAaI,EAAiB,KAAjBA,aAKjB,EAAA,KAAKS,WAAWD,GAHhBgC,EAAAA,EAAAA,IACA9B,EAAAA,EAAAA,QACAC,EAAAA,EAAAA,QAIE+B,EAAY9C,EAAc0C,EAC1BK,GAAc3C,EAFF,KAE8BqC,EAC1CO,EAAYF,EAAY,EAAIG,GAC5BC,EAAaH,EAAa,EAAIE,GAChC3B,EAAAA,QAAQ,SAAC6B,EAAMjI,GACVoG,EAAAA,QAAQ,SAAC8B,EAAMC,GACVhF,IAAAA,EAAIyC,EAAUkC,EAAYF,EAAYO,EACtC/E,EAAIyC,EAAUmC,EAAaH,EAAa7H,EACtC,GAAA,EAAKuG,QAAQ2B,EAAKE,KAAMjF,EAAGC,EAV1B,GAAA,YAgBVa,EAzITA,GAyISA,QAAAA,QAAAA;;ACrJf,aAJA,IAAA,EAAA,QAAA,6BAIA,EAAA,EAAA,GAHA,EAAA,QAAA,oBAGA,EAAA,EAAA,GAFA,EAAA,QAAA,kBAEA,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAAc,OAAOhC,iBAAiB,OAAQ,WACxBsF,IAAAA,SAEEC,IACA3D,EAASzC,SAASC,eAAe,UACjC6C,EAAS,IAAIf,EAAJ,QAAiBU,GACzB4D,EAAAA,KAHmB,GAKpBC,IAAAA,EAAW,IAAI9G,EAAJ,QAAmB,CACrB,UAAA,SADqB,UAEtB+G,SAAAA,EAAO9F,EAAMD,KAFS,OAKvB,WACE6F,EAAAA,KAXW,MAejBpG,SAAAA,eAAe,SAASY,iBAAiB,aASzC2F,SAAapG,GACLqG,aAAAA,GACNnF,EAAAA,MAAMoF,WAAa,GACjBC,EAAAA,QAEDC,IAAAA,EAAUxG,EAAMyG,QAAQ,GAAxBD,MACKA,EAAAA,IAdRE,SAAAA,KAAKjG,iBAAiB,YAiBtBkG,SAAa3G,GACd,IAACkG,EAASjG,UAAW,OAAO,EACxBuG,IAAAA,EAAUxG,EAAMyG,QAAQ,GAAxBD,MAEJI,GAAahE,GAAgBiE,EAAaL,IAAU5D,GAC5CkE,EAA+B,GAA/BA,OAAOF,EAAUzG,QAAQ,KAErB4G,IACR1E,EAAOnB,MAAMC,UAAU6F,QAAQ,UAAY,EACpC9F,EAAAA,MAAMC,UAAYkB,EAAOnB,MAAMC,UAAUO,QAAQ,cAAwBkF,SAAAA,EAAhF,KAEO1F,EAAAA,MAAMC,WAAuByF,UAAAA,EAAUhE,EAA9C,IAGC,OA9BJ8D,SAAAA,KAAKjG,iBAAiB,WAkCtBwG,SAAYjH,GACRkH,EAAAA,OACL,IACGhG,EAAAA,MAAMoF,WAAa,UACnBpF,EAAAA,MAAMC,UAAYkB,EAAOnB,MAAMC,UAAUO,QAAQ,cAAe,YAE/DxF,EAAAA,WAAW,WACRgF,EAAAA,MAAMoF,WAAa,IAC3B,OAxCHO,IAAAA,OAAJ,EACIR,OAAJ,EAEMU,EAAW,GACoCtE,EAAAA,OAAOC,OAAxBE,GAA5BD,EAAAA,MAAoBE,EAAAA","file":"src.5c790d5c.map","sourceRoot":"../src","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var hasOwn = Object.prototype.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var iteratorSymbol =\n    typeof Symbol === \"function\" && Symbol.iterator || \"@@iterator\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided, then outerFn.prototype instanceof Generator.\n    var generator = Object.create((outerFn || Generator).prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `value instanceof AwaitArgument` to determine if the yielded value is\n  // meant to be awaited. Some may consider the name of this method too\n  // cutesy, but they are curmudgeons.\n  runtime.awrap = function(arg) {\n    return new AwaitArgument(arg);\n  };\n\n  function AwaitArgument(arg) {\n    this.arg = arg;\n  }\n\n  function AsyncIterator(generator) {\n    // This invoke function is written in a style that assumes some\n    // calling function (or Promise) will handle exceptions.\n    function invoke(method, arg) {\n      var result = generator[method](arg);\n      var value = result.value;\n      return value instanceof AwaitArgument\n        ? Promise.resolve(value.arg).then(invokeNext, invokeThrow)\n        : Promise.resolve(value).then(function(unwrapped) {\n            // When a yielded Promise is resolved, its final value becomes\n            // the .value of the Promise<{value,done}> result for the\n            // current iteration. If the Promise is rejected, however, the\n            // result for this iteration will be rejected with the same\n            // reason. Note that rejections of yielded Promises are not\n            // thrown back into the generator function, as is the case\n            // when an awaited Promise is rejected. This difference in\n            // behavior between yield and await is important, because it\n            // allows the consumer to decide what to do with the yielded\n            // rejection (swallow it and continue, manually .throw it back\n            // into the generator, abandon iteration, whatever). With\n            // await, by contrast, there is no opportunity to examine the\n            // rejection reason outside the generator function, so the\n            // only option is to throw it from the await expression, and\n            // let the generator function handle the exception.\n            result.value = unwrapped;\n            return result;\n          });\n    }\n\n    if (typeof process === \"object\" && process.domain) {\n      invoke = process.domain.bind(invoke);\n    }\n\n    var invokeNext = invoke.bind(generator, \"next\");\n    var invokeThrow = invoke.bind(generator, \"throw\");\n    var invokeReturn = invoke.bind(generator, \"return\");\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return invoke(method, arg);\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : new Promise(function (resolve) {\n          resolve(callInvokeWithMethodAndArg());\n        });\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          if (method === \"return\" ||\n              (method === \"throw\" && delegate.iterator[method] === undefined)) {\n            // A return or throw (when the delegate iterator has no throw\n            // method) always terminates the yield* loop.\n            context.delegate = null;\n\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            var returnMethod = delegate.iterator[\"return\"];\n            if (returnMethod) {\n              var record = tryCatch(returnMethod, delegate.iterator, arg);\n              if (record.type === \"throw\") {\n                // If the return method threw an exception, let that\n                // exception prevail over the original return or throw.\n                method = \"throw\";\n                arg = record.arg;\n                continue;\n              }\n            }\n\n            if (method === \"return\") {\n              // Continue with the outer return, now that the delegate\n              // iterator has been terminated.\n              continue;\n            }\n          }\n\n          var record = tryCatch(\n            delegate.iterator[method],\n            delegate.iterator,\n            arg\n          );\n\n          if (record.type === \"throw\") {\n            context.delegate = null;\n\n            // Like returning generator.throw(uncaught), but without the\n            // overhead of an extra function call.\n            method = \"throw\";\n            arg = record.arg;\n            continue;\n          }\n\n          // Delegate generator ran and handled its own exceptions so\n          // regardless of what the method was, we continue as if it is\n          // \"next\" with an undefined arg.\n          method = \"next\";\n          arg = undefined;\n\n          var info = record.arg;\n          if (info.done) {\n            context[delegate.resultName] = info.value;\n            context.next = delegate.nextLoc;\n          } else {\n            state = GenStateSuspendedYield;\n            return info;\n          }\n\n          context.delegate = null;\n        }\n\n        if (method === \"next\") {\n          context._sent = arg;\n\n          if (state === GenStateSuspendedYield) {\n            context.sent = arg;\n          } else {\n            context.sent = undefined;\n          }\n        } else if (method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw arg;\n          }\n\n          if (context.dispatchException(arg)) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            method = \"next\";\n            arg = undefined;\n          }\n\n        } else if (method === \"return\") {\n          context.abrupt(\"return\", arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          var info = {\n            value: record.arg,\n            done: context.done\n          };\n\n          if (record.arg === ContinueSentinel) {\n            if (context.delegate && method === \"next\") {\n              // Deliberately forget the last sent value so that we don't\n              // accidentally pass it on to the delegate.\n              arg = undefined;\n            }\n          } else {\n            return info;\n          }\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(arg) call above.\n          method = \"throw\";\n          arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      this.sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.next = finallyEntry.finallyLoc;\n      } else {\n        this.complete(record);\n      }\n\n      return ContinueSentinel;\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = record.arg;\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n","class InfiniteScreen {\n    constructor(options = {}) {\n        this.config = Object.assign({\n            inService: false,\n            onProcess: () => {}\n        }, options);\n        this.turnX = 0;\n        this.turnY = 0;\n        this.config.container = document.getElementById(this.config.container);\n        this.init();\n    }\n\n    init() {\n        this.addEvent();\n    }\n\n    deviceCallback(event) {\n        if (!this.config.inService) return false;\n        // alpha: 在Z轴上的角度\n        var alpha = (event.alpha).toFixed(2);\n        // gamma: 从左到右\n        var gamma = (event.gamma).toFixed(2);\n        // beta: 从前到后的运动\n        var beta = (event.beta).toFixed(2);\n        this.config.onProcess && this.config.onProcess.call(this, alpha, beta, gamma);\n    }\n\n    start() {\n        this.config.inService = true;\n        this.config.onStart && this.config.onStart();\n    }\n\n    stop() {\n        this.config.inService = false;\n        this.config.onStop && this.config.onStop();\n    }\n\n    get inService() {\n        return this.config.inService;\n    }\n\n    addEvent() {\n        window.addEventListener('deviceorientation', this.deviceCallback.bind(this));\n        window.addEventListener('devicemotion',  (event) => {\n            let turnX = event.accelerationIncludingGravity.x.toFixed(2);\n            let turnY = event.accelerationIncludingGravity.y.toFixed(2);\n            if (!this.config.inService) { \n                this.turnX = turnX;\n                this.turnY = turnY;\n                return false\n            };\n            turnX = turnX - this.turnX;\n            turnY = turnY - this.turnY;\n            const direction = turnX > 0 ? 'left' : 'right';\n            const reg = /translate3d\\(-(.+)px,.-(.+)px,.0px\\)/;\n            const { container } = this.config;\n            const result = container.style.transform.match(reg);\n            if (result) {\n                const [style, x, y] = result;\n                // const isOverX = Math.abs(x) > (container.width - 200);\n                // const isOverY = Math.abs(y) > (container.height - 200);\n                // if (isOverX || isOverY) return;\n                let skewingX = turnX * 10;\n                let skewingY = turnY * 10;\n                if (Math.abs(skewingX) > 20 || Math.abs(skewingY) > 20) {\n                    // skewingX = skewingX > 0 ? skewingX - 10 : skewingX + 10;\n                    // skewingY = skewingY > 0 ? skewingY - 20 : skewingY + 20;\n                    const finalyStyle = `translate3d(-${x - skewingX}px, -${y - skewingY}px, 0px)`\n                    const transform = container.style.transform.replace(reg, finalyStyle);\n                    container.style.transform = transform;\n                }\n            }\n        })\n    }\n}\n\nexport default InfiniteScreen;","export default {\n    HORI_SCREEN_NUMB: 5, // 横向横跨几个屏幕\n    VERT_SCREEN_NUM: 3,  // 竖向横跨几个屏幕\n    APP_ICON_ROW: 5,  // 一屏要有几行 icon\n    APP_ICON_COL: 4,  // 一行要展示几个 icon\n}","import config from './config';\n\nArray.matrix = function(row, col, callback) {\n    const matirx = [];\n    let count = 0;\n    for (let i = 0; i < row; i++) {\n        const rowArr = [];\n        for (let j = 0; j < col; j++) {\n            rowArr.push(callback(i, j, count));\n            count += 1;\n        }\n        matirx.push(rowArr);\n    }\n    return matirx;\n}\n\nclass CreateScreen {\n    constructor(canvasDom, options = {}) {\n        this.canvas = canvasDom;\n        this.ctx = canvasDom.getContext('2d');\n        this.screenWidth = window.screen.width;\n        this.screenHeight = window.screen.height;\n        const { HORI_SCREEN_NUMB: col, VERT_SCREEN_NUM: row } = config;\n        this.screenMatrix = Array.matrix(row, col, (i, j, count) => ({\n            n: count,\n            originX: j * window.screen.width,\n            originY: i * window.screen.height,\n            app: []\n        }));\n        this.config = Object.assign({}, config, options);\n        for (let i = 0; i < (col * row); i++) {\n            this.setAppInScreen(i);\n        }\n        this.init();\n    }\n\n    init() {\n        this.setCanvasSize();\n        this.drawScreen();\n    }\n\n    show(num) {\n        const { originX, originY } = this.findScreen(num);\n        const { screenHeight, screenWidth } = this;\n        const centerX = originX + screenWidth / 2;\n        const centerY = originY + screenHeight / 2;\n        this.canvas.style.transform = `translate3d(-${originX}px, -${originY}px, 0) scale(1)`;\n        this.canvas.style.transformOrigin = `${centerX}px ${centerY}px`;\n    }\n\n    setCanvasSize() {\n        const { screenWidth, screenHeight, config } = this;\n        const { HORI_SCREEN_NUMB, VERT_SCREEN_NUM } = config;\n        this.canvas.width = screenWidth * HORI_SCREEN_NUMB;\n        this.canvas.height = screenHeight * VERT_SCREEN_NUM;\n    }\n\n    async drawScreen() {\n        await this.drawBg();\n\n        const {HORI_SCREEN_NUMB: x, VERT_SCREEN_NUM: y} = this.config;\n        const screenCount = x * y;\n        Array(screenCount).fill(1).forEach((_, i) => {\n            this.drawAppIcon(i);\n        })\n    }\n\n    drawBg() {\n        const { ctx, canvas, screenWidth, screenHeight } = this;\n        return this.drawImg(require('./images/xxb.jpg'), screenWidth * 2, screenHeight, screenWidth, screenHeight)\n    }\n\n    drawImg(img, x, y, w, h) {\n        return new Promise((resolve, reject) => {\n            let image = new Image();\n            image.src = img;\n            image.onload = () => {\n                image.width = w;\n                image.height = h;\n                this.ctx.drawImage(image, x, y, w, h);\n                image = null;\n                resolve();\n            }\n        })\n    }\n\n    getScreenColRow(num) {\n        const obj = {\n            col: 0,\n            row: 0\n        }\n        this.screenMatrix.forEach((el, row) => {\n            el.forEach((screen, col) => {\n                if (screen.n == num) {\n                    obj.col = col;\n                    obj.row = row;\n                }\n            })\n        });\n        return obj;\n    }\n\n    getAppData() {\n        const { APP_ICON_ROW: row, APP_ICON_COL: col } = this.config;\n        const appData = Array.matrix(row, col, (x, y) => ({\n            name: '微信',\n            icon: require('./images/wx.png')\n        }))\n        return appData;\n    }\n\n    findScreen(num) {\n        let obj = null;\n        this.screenMatrix.forEach((el, row) => {\n            el.forEach((screen, col) => {\n                if (screen.n == num) {\n                    obj = screen;\n                }\n            })\n        });\n        return obj;\n    }\n\n    setAppInScreen(i) {\n        const screen = this.findScreen(i);\n        screen.app = this.getAppData();\n    }\n\n    drawAppIcon(num = 0) {\n        const { width, height } = this.canvas;\n        const { APP_ICON_ROW, APP_ICON_COL } = this.config;\n        const { screenWidth, screenHeight } = this;\n        const {\n            app,\n            originX,\n            originY\n        } = this.findScreen(num);\n        const iconSize = 70;\n        const padBottom = 100;\n        const eachWidth = screenWidth / APP_ICON_COL;\n        const eachHeight = (screenHeight - padBottom) / APP_ICON_ROW;\n        const halfWidth = eachWidth / 2 - iconSize / 2;\n        const halfHeight = eachHeight / 2 - iconSize / 2;\n        app.forEach((rows, i) => {\n            rows.forEach((data, k) => {\n                const x = originX + halfWidth + eachWidth * k;\n                const y = originY + halfHeight + eachHeight * i;\n                data && this.drawImg(data.icon, x, y, iconSize, iconSize);\n            })\n        })\n    }\n}\n\nexport default CreateScreen;\n","import regeneratorRuntime from \"babel-regenerator-runtime\";\nimport InfiniteScreen from './InfiniteScreen';\nimport CreateScreen from './CreateScreen';\n\nwindow.addEventListener('load', () => {\n    new VConsole();\n\n    const defaultScreenShow = 7;\n    const canvas = document.getElementById('canvas');\n    const screen = new CreateScreen(canvas);\n    screen.show(defaultScreenShow);\n\n    const infinite = new InfiniteScreen({\n        container: 'canvas',\n        onProcess(aplha, beta, gamma) {\n            // console.log(aplha, beta, gamma);\n        },\n        onStop() {\n            screen.show(defaultScreenShow);\n        }\n    })\n\n    document.getElementById('start').addEventListener('touchstart', btnTouchdown);\n    document.body.addEventListener('touchmove', btnTouchmove);\n    document.body.addEventListener('touchend', btnTouchend);\n\n    let touchPageY;\n    let timer;\n    let i = 0.01;\n    const minScale = 0.2;\n    const { width: screenWidth, height: screenHeight } = window.screen;\n    function btnTouchdown(event) {\n        clearTimeout(timer);\n        canvas.style.transition = '';\n        infinite.start();\n        // canvas.style.transform += ' scale(.9)'\n        const { pageY } = event.touches[0];\n        touchPageY = pageY;\n    }\n\n    function btnTouchmove(event) {\n        if (!infinite.inService) return false;\n        const { pageY } = event.touches[0];\n        // 缩放比例\n        let distanceY = (screenHeight - (touchPageY - pageY)) / screenHeight;\n        distanceY = Number(distanceY.toFixed(3)) * 0.9;\n\n        if (distanceY > minScale) {\n            if (canvas.style.transform.indexOf('scale') > -1) {\n                canvas.style.transform = canvas.style.transform.replace(/scale\\(.+\\)/, `scale(${distanceY})`)\n            } else {\n                canvas.style.transform += ` scale(${distanceY/screenHeight})`\n            }\n            // i = i > 0.4 ? i : i + 0.01;\n            i += 0.01;\n        }\n    }\n\n    function btnTouchend(event) {\n        infinite.stop();\n        i = 0.01;\n        canvas.style.transition = 'all .5s';\n        canvas.style.transform = canvas.style.transform.replace(/scale\\(.+\\)/, 'scale(1)');\n\n        timer = setTimeout(() => {\n            canvas.style.transition = '';\n        }, 500)\n    }\n\n    function throttle(method, delay, mustRunDelay) {\n        var timer = null, args = arguments;\n        var start = 0, now = 0;\n        return function () {\n            var context = this;\n            now= Date.now();\n            if(!start){\n                start = now;\n            }\n            if(now - start >= mustRunDelay){\n                method.apply(context, args);\n                start = Date.now();\n            }else {\n                clearTimeout(timer);\n                timer = setTimeout(function () {\n                    method.apply(context, args);\n                }, delay);\n            }\n    \n        }\n    }\n})\n"]}